@model ReservedNamespaceViewModel
@{
    ViewBag.Title = "Index";
}

@ViewHelpers.AjaxAntiForgeryToken(Html)

<section>
    <article id="stage">
        <div class="message" style="display: none" data-bind="text: message, visible: message"></div>
        <h2>Reserve Namespace</h2>
        <form>
            <div class="form-horizontal">
                <input type="text" placeholder="Search for a prefix" autocomplete="on" autofocus data-bind="value: prefixSearchQuery" />
                <input type="button" value="Search Prefix" title="Search Prefix" data-bind="click: prefixSearch" />
            </div>
        </form><br />

        <div data-bind="visible: allPrefixResults().length > 0">
            @using (Html.BeginForm())
            {
                <div id="prefixResult" data-bind="foreach: allPrefixResults">
                    <table>
                        <tr>
                            <td class="namespaceDetails">
                                <div>
                                    <div>
                                        <span style="font-weight: bold">Namespace: </span>
                                        <span data-bind="text: $data.prefix.Value" />
                                    </div>
                                    <div>
                                        <label>
                                            <input type="checkbox" data-bind="checked: $data.prefix.IsSharedNamespace, disable: $data.isExisting" />IsSharedNamespace
                                        </label>
                                    </div>
                                    <div>
                                        <label>
                                            <input type="checkbox" data-bind="checked: $data.prefix.IsPrefix, disable: $data.isExisting" value="IsPrefix" />IsPrefix
                                        </label>
                                    </div>
                                    <div>
                                        <span style="font-weight: bold">Matching Pattern: </span>
                                        <span data-bind="text: $parent.generatePattern($data.prefix.Value, $data.prefix.IsPrefix)" />
                                    </div>
                                    <!-- ko if: $data.isExisting -->
                                    <input style="margin-top: 5px" type="submit" value="Deallocate Namespace" title="Delete this namespace"
                                           data-bind="click: $parent.managePrefix.bind(this, $data.prefix, false)" />
                                    <!-- /ko -->
                                    <!-- ko ifnot: $data.isExisting -->
                                    <input style="margin-top: 5px" type="submit" value="Reserve Namespace" title="Add this namespace"
                                           data-bind="click: $parent.managePrefix.bind(this, $data.prefix, true)" />
                                    <!-- /ko -->
                                </div>
                            </td>
                            <td class="ownersList" style="vertical-align: top">
                                <!-- ko if: $data.isExisting -->
                                <div id="prefixOwners" data-bind="foreach: $data.owners">
                                    <div style="margin: 5px">
                                        <span data-bind="text: $data"></span>
                                        <input style="float: right" type="button" value="Remove" title="Remove this owner" data-bind="click: $root.removeOwner.bind(this, $data, $parent.prefix)" />
                                    </div>
                                </div>
                                <div style="margin: 5px">
                                    <input type="text" placeholder="Enter username" autocomplete="off" data-bind="value: $parent.newOwner, valueUpdate: 'afterkeydown'" />
                                    <input type="button" value="Add" title="Add new owner for this prefix" data-bind="click: $parent.addOwner.bind(this, $data.prefix), enable: $parent.newOwner().length > 0" />
                                </div>
                                <!-- /ko -->
                            </td>
                        </tr>
                    </table>
                </div>
            }
        </div>
    </article>

</section>

@section BottomScripts {
    <script src="@Url.Content("~/Scripts/knockout-2.2.1.js")"></script>
    <script src="@Url.Content("~/Scripts/gallery/common.js")"></script>
    <script>
        $(document).ready(function () {
            var viewModel = function () {
                var $self = this;

                this.message = ko.observable('');
                this.prefixSearchQuery = ko.observable('');
                this.newOwner = ko.observable('');

                this.refresh = function () {
                    this.prefixSearch();
                }

                this.allPrefixResults = ko.observableArray([]);
                this.prefixSearch = function () {
                    $self.message("");
                    $self.newOwner("");
                    $.ajax({
                        url: '@Url.Action("SearchPrefix", "ReservedNamespace", new {area = "Admin"})?query=' + encodeURIComponent($self.prefixSearchQuery()),
                        cache: false,
                        dataType: 'json',
                        success: function (data) {
                            $self.allPrefixResults.removeAll();
                            if (!data.success && data.message != null) {
                                $self.message(data.message);
                            } else {
                                $self.allPrefixResults(data.Prefixes);
                            }
                        }
                    })
                    .error(function(jqXhr, textStatus, errorThrown) {
                        alert("Error: " + errorThrown);
                    });
                };

                this.managePrefix = function (data, addPrefix) {
                    var prefixToModify = data;
                    var url = addPrefix
                        ? '@Url.Action("AddPrefix", "ReservedNamespace", new { area = "Admin" })'
                        : '@Url.Action("RemovePrefix", "ReservedNamespace", new { area = "Admin" })';
                    $self.message("");
                    $.ajax({
                        url: url,
                        cache: false,
                        dataType: 'json',
                        type: 'POST',
                        data: window.nuget.addAjaxAntiForgeryToken(prefixToModify),
                        success: function (data) {
                            if (data.success) {
                                $self.refresh();
                            }

                            if (data.message != null) {
                                $self.message(data.message);
                            }
                        }
                    })
                    .error(function (jqXhr, textStatus, errorThrown) {
                        alert("Error: " + errorThrown);
                    });
                };

                this.addOwner = function (prefix) {
                    var owner = $self.newOwner();
                    var obj = {
                        prefix: prefix,
                        owner: owner,
                    };

                    $self.message("");
                    $.ajax({
                        url: '@Url.Action("AddOwner", "ReservedNamespace", new { area = "Admin" })',
                        cache: false,
                        dataType: 'json',
                        type: 'POST',
                        data: window.nuget.addAjaxAntiForgeryToken(obj),
                        success: function (data) {
                            if (data.success) {
                                $self.newOwner("");
                                $self.refresh();
                            }

                            if (data.message != null) {
                                $self.message(data.message);
                            }
                        }
                    })
                    .error(function (jqXhr, textStatus, errorThrown) {
                        $self.message(errorThrown);
                        alert("Error: " + errorThrown);
                    });
                };

                this.removeOwner = function (owner, prefix) {
                    var obj = {
                        prefix: prefix,
                        owner: owner,
                    };

                    $self.message("");
                    $.ajax({
                        url: '@Url.Action("RemoveOwner", "ReservedNamespace", new { area = "Admin" })',
                        cache: false,
                        dataType: 'json',
                        type: 'POST',
                        data: window.nuget.addAjaxAntiForgeryToken(obj),
                        success: function (data) {
                            if (data.success) {
                                $self.refresh();
                            }

                            if (data.message != null) {
                                $self.message(data.message);
                            }
                        }
                    })
                    .error(function (jqXhr, textStatus, errorThrown) {
                        $self.message(errorThrown);
                        alert("Error: " + errorThrown);
                    });
                };

                this.generateValue = function (user, subscription) {
                    return JSON.stringify({ "u": user.Username, "g": subscription, "v": user.Selected[subscription]() })
                };

                this.generateUserUrl = function (user) {
                    return '/profiles/' + user.Username;
                };

                this.generatePattern = function (value, isPrefix) {
                    return isPrefix ? value + "*" : value;
                };
            };

            ko.applyBindings(new viewModel(), $('#stage').get(0));
        });
    </script>
}